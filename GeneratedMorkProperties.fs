namespace MorkSharp

open MorkSharp.Vocab

module internal Properties =

    // AUTOGENERATED - DO NOT EDIT MANUALLY
    // Generated by generateMorkProperties.fsx

    let AssertsPropertyDomains = ObjectProperty ({ Distance = NA; Predicate = NonApplicable; Object = Related; Scope = Local }, "assertsPropertyDomains")
    let AssertsPropertyRanges = ObjectProperty ({ Distance = NA; Predicate = NonApplicable; Object = Related; Scope = Local }, "assertsPropertyRanges")
    let AssociativeBroader = ObjectProperty ({ Distance = Broad; Predicate = Associative; Object = Related; Scope = Local }, "associativeBroader")
    let AssociativeNarrower = ObjectProperty ({ Distance = Narrow; Predicate = Associative; Object = Related; Scope = Local }, "associativeNarrower")
    let BroadABoxCategoryMatch = ObjectProperty ({ Distance = Broad; Predicate = Categorical; Object = Related; Scope = Local }, "broadABoxCategoryMatch")
    let BroadCategoryMatch = ObjectProperty ({ Distance = Broad; Predicate = Categorical; Object = Related; Scope = Local }, "broadCategoryMatch")
    let BroadConceptRole = ObjectProperty ({ Distance = Broad; Predicate = NonApplicable; Object = Related; Scope = Local }, "broadConceptRole")
    let BroadNavigableConceptRole = ObjectProperty ({ Distance = Broad; Predicate = NonApplicable; Object = Related; Scope = Local }, "broadNavigableConceptRole")
    let BroadRBoxCategoryMatch = ObjectProperty ({ Distance = Broad; Predicate = Categorical; Object = Related; Scope = Local }, "broadRBoxCategoryMatch")
    let BroadTBoxCategoryMatch = ObjectProperty ({ Distance = Broad; Predicate = Categorical; Object = Related; Scope = Local }, "broadTBoxCategoryMatch")
    let BroaderApplicative = ObjectProperty ({ Distance = Broad; Predicate = UpdateContext; Object = Related; Scope = Applicative }, "broaderApplicative")
    let BroaderMapping = ObjectProperty ({ Distance = Broad; Predicate = Configuration; Object = Mapping; Scope = Local }, "broaderMapping")
    let CloseMapping = ObjectProperty ({ Distance = Close; Predicate = Configuration; Object = Mapping; Scope = Local }, "closeMapping")
    let CompositeBroader = ObjectProperty ({ Distance = Broad; Predicate = Compositional; Object = Related; Scope = Local }, "compositeBroader")
    let CompositeBroaderMapping = ObjectProperty ({ Distance = Broad; Predicate = Compositional; Object = Mapping; Scope = Local }, "compositeBroaderMapping")
    let CompositeBroaderTemplate = ObjectProperty ({ Distance = Broad; Predicate = Compositional; Object = Template; Scope = Local }, "compositeBroaderTemplate")
    let CompositeNarrower = ObjectProperty ({ Distance = Narrow; Predicate = Compositional; Object = Related; Scope = Local }, "compositeNarrower")
    let CompositeNarrowerMapping = ObjectProperty ({ Distance = Narrow; Predicate = Compositional; Object = Mapping; Scope = Local }, "compositeNarrowerMapping")
    let CompositeNarrowerTemplate = ObjectProperty ({ Distance = Narrow; Predicate = Compositional; Object = Template; Scope = Local }, "compositeNarrowerTemplate")
    let Concatenation = ObjectProperty ({ Distance = NA; Predicate = NonApplicable; Object = Related; Scope = Local }, "concatenation")
    let ConceptScheme = LinkingProperty "http://www.nebularis.org/ontologies/Mork#conceptScheme"
    let DeferredMapping = ObjectProperty ({ Distance = NA; Predicate = Dependent; Object = Mapping; Scope = Deferred }, "deferredMapping")
    let DependentMapping = ObjectProperty ({ Distance = NA; Predicate = Dependent; Object = Mapping; Scope = Local }, "dependentMapping")
    let DigraphMatch = ObjectProperty ({ Distance = NA; Predicate = NonApplicable; Object = Related; Scope = Local }, "digraphMatch")
    let DigraphOf = ObjectProperty ({ Distance = NA; Predicate = NonApplicable; Object = Related; Scope = Local }, "digraphOf")
    let ElementType = ObjectProperty ({ Distance = Narrow; Predicate = NonApplicable; Object = Related; Scope = Local }, "elementType")
    let ExactABoxMatch = ObjectProperty ({ Distance = Exact; Predicate = Indicative; Object = Related; Scope = Local }, "exactABoxMatch")
    let ExactMapping = ObjectProperty ({ Distance = Exact; Predicate = Configuration; Object = Mapping; Scope = Local }, "exactMapping")
    let ExactRBoxMatch = ObjectProperty ({ Distance = Exact; Predicate = Indicative; Object = Related; Scope = Local }, "exactRBoxMatch")
    let ExactTBoxMatch = ObjectProperty ({ Distance = Exact; Predicate = Indicative; Object = Related; Scope = Local }, "exactTBoxMatch")
    let Format = LinkingProperty "http://www.nebularis.org/ontologies/Mork#format"
    let HasConcept = LinkingProperty "http://www.nebularis.org/ontologies/Mork#hasConcept"
    let HasMapping = LinkingProperty "http://www.nebularis.org/ontologies/Mork#hasMapping"
    let HypothesisMapping = ObjectProperty ({ Distance = NA; Predicate = Dependent; Object = Hypotheses; Scope = Local }, "hypothesisMapping")
    let IdentityTemplateMapping = ObjectProperty ({ Distance = NA; Predicate = Identity; Object = Template; Scope = Local }, "identityTemplateMapping")
    let IndicativeMapping = LinkingProperty "http://www.nebularis.org/ontologies/Mork#indicativeMapping"
    let InterpolationComponent = ObjectProperty ({ Distance = NA; Predicate = NonApplicable; Object = Related; Scope = Local }, "interpolationComponent")
    let IntransitiveExactMatch = ObjectProperty ({ Distance = Exact; Predicate = Indicative; Object = Related; Scope = Local }, "intransitiveExactMatch")
    let InverseRBoxMatch = ObjectProperty ({ Distance = Exact; Predicate = Indicative; Object = Related; Scope = Local }, "inverseRBoxMatch")
    let LexicalMatch = ObjectProperty ({ Distance = Close; Predicate = Indicative; Object = Related; Scope = Local }, "lexicalMatch")
    let MappingFor = LinkingProperty "http://www.nebularis.org/ontologies/Mork#mappingFor"
    let MappingScheme = LinkingProperty "http://www.nebularis.org/ontologies/Mork#mappingScheme"
    let MemberOf = LinkingProperty "http://www.nebularis.org/ontologies/Mork#memberOf"
    let MemberProperty = ObjectProperty ({ Distance = Narrow; Predicate = NonApplicable; Object = Related; Scope = Local }, "memberProperty")
    let MissingOrUnrelatedMatch = ObjectProperty ({ Distance = NA; Predicate = NonApplicable; Object = Related; Scope = Local }, "missingOrUnrelatedMatch")
    let NarrowABoxCategoryMatch = ObjectProperty ({ Distance = Narrow; Predicate = Categorical; Object = Related; Scope = Local }, "narrowABoxCategoryMatch")
    let NarrowCategoryMatch = ObjectProperty ({ Distance = Narrow; Predicate = Categorical; Object = Related; Scope = Local }, "narrowCategoryMatch")
    let NarrowConceptRole = ObjectProperty ({ Distance = Narrow; Predicate = NonApplicable; Object = Related; Scope = Local }, "narrowConceptRole")
    let NarrowNavigableConceptRole = ObjectProperty ({ Distance = Narrow; Predicate = NonApplicable; Object = Related; Scope = Local }, "narrowNavigableConceptRole")
    let NarrowRBoxCategoryMatch = ObjectProperty ({ Distance = Narrow; Predicate = Categorical; Object = Related; Scope = Local }, "narrowRBoxCategoryMatch")
    let NarrowTBoxCategoryMatch = ObjectProperty ({ Distance = Narrow; Predicate = Categorical; Object = Related; Scope = Local }, "narrowTBoxCategoryMatch")
    let NarrowerMapping = ObjectProperty ({ Distance = Narrow; Predicate = Configuration; Object = Mapping; Scope = Local }, "narrowerMapping")
    let OntologicalScheme = LinkingProperty "http://www.nebularis.org/ontologies/Mork#ontologicalScheme"
    let PartialMatch = ObjectProperty ({ Distance = Close; Predicate = Indicative; Object = Related; Scope = Local }, "partialMatch")
    let PlaceholderMapping = ObjectProperty ({ Distance = NA; Predicate = Configuration; Object = Mapping; Scope = Local }, "placeholderMapping")
    let PossibleMatch = ObjectProperty ({ Distance = Close; Predicate = Indicative; Object = Related; Scope = Local }, "possibleMatch")
    let PropertyMappingAssertions = ObjectProperty ({ Distance = NA; Predicate = Configuration; Object = Mapping; Scope = Local }, "propertyMappingAssertions")
    let ReferenceDataMapping = ObjectProperty ({ Distance = NA; Predicate = Configuration; Object = Mapping; Scope = Local }, "referenceDataMapping")
    let RelatedMapping = ObjectProperty ({ Distance = NA; Predicate = Configuration; Object = Related; Scope = Local }, "relatedMapping")
    let RelatedProperty = LinkingProperty "http://www.nebularis.org/ontologies/Mork#relatedProperty"
    let RepresentationOf = LinkingProperty "http://www.nebularis.org/ontologies/Mork#representationOf"
    let RepresentationScheme = LinkingProperty "http://www.nebularis.org/ontologies/Mork#representationScheme"
    let RepresentedAs = LinkingProperty "http://www.nebularis.org/ontologies/Mork#representedAs"
    let SemanticMatch = ObjectProperty ({ Distance = Close; Predicate = Indicative; Object = Related; Scope = Local }, "semanticMatch")
    let StructuralMatch = ObjectProperty ({ Distance = Close; Predicate = Indicative; Object = Related; Scope = Local }, "structuralMatch")
    let TemplateMapping = ObjectProperty ({ Distance = NA; Predicate = Configuration; Object = Template; Scope = Local }, "templateMapping")
    let WeightedBroader = ObjectProperty ({ Distance = Broad; Predicate = NonApplicable; Object = Related; Scope = Local }, "weightedBroader")
    let WeightedNarrower = ObjectProperty ({ Distance = Narrow; Predicate = NonApplicable; Object = Related; Scope = Local }, "weightedNarrower")
    let YieldConcept = ObjectProperty ({ Distance = NA; Predicate = NonApplicable; Object = Related; Scope = Local }, "yieldConcept")

    let MorkProperties : Map<string, MorkProperty> =
        [
        "http://www.nebularis.org/ontologies/Mork#assertsPropertyDomains", AssertsPropertyDomains
        "http://www.nebularis.org/ontologies/Mork#assertsPropertyRanges", AssertsPropertyRanges
        "http://www.nebularis.org/ontologies/Mork#associativeBroader", AssociativeBroader
        "http://www.nebularis.org/ontologies/Mork#associativeNarrower", AssociativeNarrower
        "http://www.nebularis.org/ontologies/Mork#broadABoxCategoryMatch", BroadABoxCategoryMatch
        "http://www.nebularis.org/ontologies/Mork#broadCategoryMatch", BroadCategoryMatch
        "http://www.nebularis.org/ontologies/Mork#broadConceptRole", BroadConceptRole
        "http://www.nebularis.org/ontologies/Mork#broadNavigableConceptRole", BroadNavigableConceptRole
        "http://www.nebularis.org/ontologies/Mork#broadRBoxCategoryMatch", BroadRBoxCategoryMatch
        "http://www.nebularis.org/ontologies/Mork#broadTBoxCategoryMatch", BroadTBoxCategoryMatch
        "http://www.nebularis.org/ontologies/Mork#broaderApplicative", BroaderApplicative
        "http://www.nebularis.org/ontologies/Mork#broaderMapping", BroaderMapping
        "http://www.nebularis.org/ontologies/Mork#closeMapping", CloseMapping
        "http://www.nebularis.org/ontologies/Mork#compositeBroader", CompositeBroader
        "http://www.nebularis.org/ontologies/Mork#compositeBroaderMapping", CompositeBroaderMapping
        "http://www.nebularis.org/ontologies/Mork#compositeBroaderTemplate", CompositeBroaderTemplate
        "http://www.nebularis.org/ontologies/Mork#compositeNarrower", CompositeNarrower
        "http://www.nebularis.org/ontologies/Mork#compositeNarrowerMapping", CompositeNarrowerMapping
        "http://www.nebularis.org/ontologies/Mork#compositeNarrowerTemplate", CompositeNarrowerTemplate
        "http://www.nebularis.org/ontologies/Mork#concatenation", Concatenation
        "http://www.nebularis.org/ontologies/Mork#conceptScheme", ConceptScheme
        "http://www.nebularis.org/ontologies/Mork#deferredMapping", DeferredMapping
        "http://www.nebularis.org/ontologies/Mork#dependentMapping", DependentMapping
        "http://www.nebularis.org/ontologies/Mork#digraphMatch", DigraphMatch
        "http://www.nebularis.org/ontologies/Mork#digraphOf", DigraphOf
        "http://www.nebularis.org/ontologies/Mork#elementType", ElementType
        "http://www.nebularis.org/ontologies/Mork#exactABoxMatch", ExactABoxMatch
        "http://www.nebularis.org/ontologies/Mork#exactMapping", ExactMapping
        "http://www.nebularis.org/ontologies/Mork#exactRBoxMatch", ExactRBoxMatch
        "http://www.nebularis.org/ontologies/Mork#exactTBoxMatch", ExactTBoxMatch
        "http://www.nebularis.org/ontologies/Mork#format", Format
        "http://www.nebularis.org/ontologies/Mork#hasConcept", HasConcept
        "http://www.nebularis.org/ontologies/Mork#hasMapping", HasMapping
        "http://www.nebularis.org/ontologies/Mork#hypothesisMapping", HypothesisMapping
        "http://www.nebularis.org/ontologies/Mork#identityTemplateMapping", IdentityTemplateMapping
        "http://www.nebularis.org/ontologies/Mork#indicativeMapping", IndicativeMapping
        "http://www.nebularis.org/ontologies/Mork#interpolationComponent", InterpolationComponent
        "http://www.nebularis.org/ontologies/Mork#intransitiveExactMatch", IntransitiveExactMatch
        "http://www.nebularis.org/ontologies/Mork#inverseRBoxMatch", InverseRBoxMatch
        "http://www.nebularis.org/ontologies/Mork#lexicalMatch", LexicalMatch
        "http://www.nebularis.org/ontologies/Mork#mappingFor", MappingFor
        "http://www.nebularis.org/ontologies/Mork#mappingScheme", MappingScheme
        "http://www.nebularis.org/ontologies/Mork#memberOf", MemberOf
        "http://www.nebularis.org/ontologies/Mork#memberProperty", MemberProperty
        "http://www.nebularis.org/ontologies/Mork#missingOrUnrelatedMatch", MissingOrUnrelatedMatch
        "http://www.nebularis.org/ontologies/Mork#narrowABoxCategoryMatch", NarrowABoxCategoryMatch
        "http://www.nebularis.org/ontologies/Mork#narrowCategoryMatch", NarrowCategoryMatch
        "http://www.nebularis.org/ontologies/Mork#narrowConceptRole", NarrowConceptRole
        "http://www.nebularis.org/ontologies/Mork#narrowNavigableConceptRole", NarrowNavigableConceptRole
        "http://www.nebularis.org/ontologies/Mork#narrowRBoxCategoryMatch", NarrowRBoxCategoryMatch
        "http://www.nebularis.org/ontologies/Mork#narrowTBoxCategoryMatch", NarrowTBoxCategoryMatch
        "http://www.nebularis.org/ontologies/Mork#narrowerMapping", NarrowerMapping
        "http://www.nebularis.org/ontologies/Mork#ontologicalScheme", OntologicalScheme
        "http://www.nebularis.org/ontologies/Mork#partialMatch", PartialMatch
        "http://www.nebularis.org/ontologies/Mork#placeholderMapping", PlaceholderMapping
        "http://www.nebularis.org/ontologies/Mork#possibleMatch", PossibleMatch
        "http://www.nebularis.org/ontologies/Mork#propertyMappingAssertions", PropertyMappingAssertions
        "http://www.nebularis.org/ontologies/Mork#referenceDataMapping", ReferenceDataMapping
        "http://www.nebularis.org/ontologies/Mork#relatedMapping", RelatedMapping
        "http://www.nebularis.org/ontologies/Mork#relatedProperty", RelatedProperty
        "http://www.nebularis.org/ontologies/Mork#representationOf", RepresentationOf
        "http://www.nebularis.org/ontologies/Mork#representationScheme", RepresentationScheme
        "http://www.nebularis.org/ontologies/Mork#representedAs", RepresentedAs
        "http://www.nebularis.org/ontologies/Mork#semanticMatch", SemanticMatch
        "http://www.nebularis.org/ontologies/Mork#structuralMatch", StructuralMatch
        "http://www.nebularis.org/ontologies/Mork#templateMapping", TemplateMapping
        "http://www.nebularis.org/ontologies/Mork#weightedBroader", WeightedBroader
        "http://www.nebularis.org/ontologies/Mork#weightedNarrower", WeightedNarrower
        "http://www.nebularis.org/ontologies/Mork#yieldConcept", YieldConcept
        ] |> Map.ofList
